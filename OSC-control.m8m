<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AUTHOR</key>
	<string>Iduun</string>
	<key>CONTROLS</key>
	<array>
		<dict>
			<key>AUTOSERIALIZE</key>
			<integer>0</integer>
			<key>CAPTION</key>
			<string>This module translate OSC messages to Modul8 keyword.

/layer.1/alpha =&gt; /md8key/ctrl_layer_alpha/1
/master/alpha =&gt;  /md8key/ctrl_layer_alpha/0

If you send one value, the parameter will go to this value immediatly.
But you can append the value with a time in millisecondsâ€¦</string>
			<key>CONTINOUS_MODE</key>
			<false/>
			<key>DEFAULT_FLOAT_VALUE_0</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_4</key>
			<real>0.0</real>
			<key>DEFAULT_FLOAT_VALUE_5</key>
			<real>1.6212958658533792e+17</real>
			<key>EXC_GROUP</key>
			<string></string>
			<key>GROUP</key>
			<string></string>
			<key>HEIGHT</key>
			<real>162.25</real>
			<key>HIDDEN</key>
			<integer>0</integer>
			<key>LINEFEED_MODE</key>
			<false/>
			<key>LISTBOX_INIT_MODE</key>
			<string>INIT_WITH_STRING_LIST</string>
			<key>LISTBOX_STRING_LIST</key>
			<string></string>
			<key>LISTBOX_VALUE_MODE</key>
			<string>ABS_POSITION</string>
			<key>LIVE_MODE</key>
			<false/>
			<key>MAX_FLOAT_VALUE_0</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_1</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_2</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_3</key>
			<real>1</real>
			<key>MAX_FLOAT_VALUE_4</key>
			<real>1.3826143222711221e-226</real>
			<key>MAX_FLOAT_VALUE_5</key>
			<real>1.0167052324637695e-316</real>
			<key>MIN_FLOAT_VALUE_0</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_1</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_2</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_3</key>
			<real>0.0</real>
			<key>MIN_FLOAT_VALUE_4</key>
			<real>5.2635442471208903e-315</real>
			<key>MIN_FLOAT_VALUE_5</key>
			<real>0.0</real>
			<key>NAME</key>
			<string>Untitled</string>
			<key>PREVIEW_MEDIA_MODE</key>
			<integer>0</integer>
			<key>RADIUS_0</key>
			<real>4</real>
			<key>RADIUS_1</key>
			<real>4</real>
			<key>RADIUS_2</key>
			<real>4</real>
			<key>RADIUS_3</key>
			<real>4</real>
			<key>SCRIPT_MESSAGE</key>
			<string></string>
			<key>SELECTED</key>
			<false/>
			<key>SHAPE_DOTS</key>
			<true/>
			<key>TEXT_ALIGNEMENT</key>
			<string>LEFT</string>
			<key>TOGGLE_MODE</key>
			<false/>
			<key>TYPE</key>
			<string>TEXTCAPTIONG</string>
			<key>UI_MAPS</key>
			<array/>
			<key>UNIQUE_ID</key>
			<integer>93</integer>
			<key>WIDTH</key>
			<real>259.47265625</real>
			<key>X</key>
			<real>24</real>
			<key>Y</key>
			<real>8</real>
		</dict>
	</array>
	<key>DESCRIPTION</key>
	<string> ------&gt; contact@iduun.com</string>
	<key>MODULE_AUTOFLUSH</key>
	<false/>
	<key>MODULE_CONTROL_ID_COUNTER</key>
	<integer>93</integer>
	<key>MODULE_LAYER_CONTEXTUAL</key>
	<false/>
	<key>MODULE_RESETDIRECTKEY_PAUSED</key>
	<true/>
	<key>MODULE_TITLEBAR_B</key>
	<real>0.20392157137393951</real>
	<key>MODULE_TITLEBAR_G</key>
	<real>0.13333334028720856</real>
	<key>MODULE_TITLEBAR_R</key>
	<real>0.08235294371843338</real>
	<key>PREFERENCES</key>
	<dict>
		<key>SCRIPT_STATE</key>
		<string>PLAYING</string>
		<key>WINDOW_HIDDEN</key>
		<false/>
		<key>WINDOW_MINIMIZED</key>
		<false/>
		<key>WINDOW_X</key>
		<real>1040</real>
		<key>WINDOW_Y</key>
		<real>762</real>
	</dict>
	<key>SCRIPT_CLEANUP</key>
	<string></string>
	<key>SCRIPT_DESERIALIZE</key>
	<string></string>
	<key>SCRIPT_EVENT</key>
	<string>if type == 'OSC':
	#this is an OSC message
	if '/' == param['address'][0]:
		#this start with a slash
		#print it please
		#print "OSC INPUT : ", param['address'] , param['args']
		#if it has 2 args I would excpect value2go and time2go
		if len(param['args']) &gt; 1:
			restoreInterpolation=param['args'][1]/1000
		else:
			restoreInterpolation=0
		#print 'TIME2GO' , restoreInterpolation * 1000
		maxValue = float(param['args'][0])
		#print 'VALUE2GO' ,maxValue	
		keyword = param['address']
		#translate OSC keyword (layer.x/keyword) to modul8 keyword (keyword/x)
		keyword , layer = osc2modul8(keyword , 0)
		#print 'KEYWORD RETURNED' , keyword
		#print 'LAYER RETURNED' , layer
		#print 'GO'
		layerkey = str(layer) + keyword
		#if ramp is in progress on this keyword
		if ramp.get(layerkey):
			#kill the previous ramp
			#print 'KILL' , ramp[layerkey]
			del ramp[layerkey]	
		if restoreInterpolation == 0:
			modul8.setValue(keyword, maxValue , layer)
		else:
			#start a new ramp on this keyword
			ramp.setdefault(layerkey , {'reminder' :modul8.getValue(keyword,layer) , 'dest_value' : maxValue , 'time' : restoreInterpolation , 'keyword' : keyword , 'layer' : layer})
			#apply the ramp
			ramp[layerkey]['rate'] = (ramp[layerkey]['reminder'] - ramp[layerkey]['dest_value'])/ramp[layerkey]['time']</string>
	<key>SCRIPT_INIT</key>
	<string>#import math
count = 0
ramp = {}

# Function to translate OSC address to modul8 keyword language
# /layer.1/alpha =&gt; ctrl_layer_alpha , 1
# /master/alpha =&gt; ctrl_layer_alpha , 0
def osc2modul8(keyword , layer):
	keyword = keyword.split('/')[1:]				
	if keyword[0] == 'master':
		layer_index = 0
		keyword = 'ctrl_' + '_'.join(keyword)
	else:
		layer = keyword[0].split('.')[1]
		layer = int(layer)
		keyword = keyword[1:]
		keyword = 'ctrl_layer_' + '_'.join(keyword)
	#print 'LAYER' ,  layer
	#print 'KEYWORD' , keyword
	return keyword , layer</string>
	<key>SCRIPT_KEYWORDEVENT</key>
	<string></string>
	<key>SCRIPT_MESSAGE</key>
	<string></string>
	<key>SCRIPT_PAUSEEVENT</key>
	<string></string>
	<key>SCRIPT_PERIODICAL</key>
	<string>count += elapsed

#print 'ELAPSED' , elapsed
if count &gt; 1/30 :
	for layerkey in ramp.keys():
		#print ramp.keys()
		ramp[layerkey]['tmp'] =modul8.getValue(ramp[layerkey]['keyword'],ramp[layerkey]['layer'])-ramp[layerkey]['rate'] * count
		if (0&lt;=ramp[layerkey]['rate']  and ramp[layerkey]['tmp']-ramp[layerkey]['dest_value']&lt;0) or (ramp[layerkey]['rate'] &lt;0 and 0&lt;ramp[layerkey]['tmp']-ramp[layerkey]['dest_value']) :
			modul8.setValue(ramp[layerkey]['keyword'], ramp[layerkey]['dest_value'],ramp[layerkey]['layer'])
			del ramp[layerkey]
			#print "FIN DE L'AUTOMATION"
		else :
			#print "AUTOMATION"
			modul8.setValue(ramp[layerkey]['keyword'] , ramp[layerkey]['tmp'] , ramp[layerkey]['layer'])
	count = 0
	#print 'COUNTER A ZERO'</string>
	<key>SCRIPT_SERIALIZE</key>
	<string></string>
	<key>SHORT_DESCRIPTION</key>
	<string>Smoothly change a param of the movie.</string>
	<key>VERSION</key>
	<string>0.1</string>
	<key>WINDOW_HEIGHT</key>
	<real>210</real>
	<key>WINDOW_WIDTH</key>
	<real>300</real>
</dict>
</plist>
